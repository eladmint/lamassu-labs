# TrustWrapper v3.0 Ingress Configuration
# Production-ready ingress with SSL termination and load balancing

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trustwrapper-ingress
  namespace: trustwrapper
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
spec:
  tls:
  - hosts:
    - api.trustwrapper.com
    - api-v3.trustwrapper.com
    secretName: trustwrapper-tls
  rules:
  - host: api.trustwrapper.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trustwrapper-service
            port:
              number: 80
  - host: api-v3.trustwrapper.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trustwrapper-service
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: trustwrapper-load-balancer
  namespace: trustwrapper
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 80
    protocol: TCP
    name: https
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: trustwrapper
    version: v3.0
