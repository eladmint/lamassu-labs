openapi: 3.0.3
info:
  title: TrustWrapper API
  description: |
    The TrustWrapper API provides programmatic access to AI verification services
    combining Zero-Knowledge Proofs, Explainable AI, and Quality Consensus.
  version: 1.0.0
  contact:
    name: TrustWrapper Support
    email: support@trustwrapper.io
    url: https://trustwrapper.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://api.trustwrapper.io/v1
    description: Production server
  - url: https://api-staging.trustwrapper.io/v1
    description: Staging server

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register for API access
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - organization
                - use_case
              properties:
                email:
                  type: string
                  format: email
                organization:
                  type: string
                use_case:
                  type: string
      responses:
        '201':
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCredentials'
        '400':
          $ref: '#/components/responses/BadRequest'

  /verifications:
    post:
      summary: Create a new verification session
      tags:
        - Verifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVerificationRequest'
      responses:
        '201':
          description: Verification session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /verifications/{verification_id}/inference:
    post:
      summary: Submit inference for verification
      tags:
        - Verifications
      parameters:
        - $ref: '#/components/parameters/VerificationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceRequest'
      responses:
        '202':
          description: Inference accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceSubmission'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /verifications/{verification_id}/results/{inference_id}:
    get:
      summary: Get verification results
      tags:
        - Verifications
      parameters:
        - $ref: '#/components/parameters/VerificationId'
        - $ref: '#/components/parameters/InferenceId'
      responses:
        '200':
          description: Verification results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResults'
        '404':
          $ref: '#/components/responses/NotFound'

  /verifications/{verification_id}/status:
    get:
      summary: Get verification session status
      tags:
        - Verifications
      parameters:
        - $ref: '#/components/parameters/VerificationId'
      responses:
        '200':
          description: Verification status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationStatus'
        '404':
          $ref: '#/components/responses/NotFound'

  /verifications/batch:
    post:
      summary: Submit batch verification
      tags:
        - Verifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchVerificationRequest'
      responses:
        '202':
          description: Batch accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSubmission'
        '403':
          description: Feature requires Enterprise tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /models:
    post:
      summary: Register a model
      tags:
        - Models
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistration'
      responses:
        '201':
          description: Model registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'

  /health:
    get:
      summary: API health check
      tags:
        - System
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key

  parameters:
    VerificationId:
      name: verification_id
      in: path
      required: true
      schema:
        type: string
        pattern: '^ver_[a-zA-Z0-9]+$'

    InferenceId:
      name: inference_id
      in: path
      required: true
      schema:
        type: string
        pattern: '^inf_[a-zA-Z0-9]+$'

  schemas:
    ApiCredentials:
      type: object
      properties:
        api_key:
          type: string
          pattern: '^tw_live_[a-zA-Z0-9]+$'
        api_secret:
          type: string
          pattern: '^tw_secret_[a-zA-Z0-9]+$'
        tier:
          type: string
          enum: [developer, startup, enterprise, custom]
        rate_limit:
          type: object
          properties:
            requests_per_minute:
              type: integer
            requests_per_day:
              type: integer

    CreateVerificationRequest:
      type: object
      required:
        - model_id
        - model_type
      properties:
        model_id:
          type: string
        model_type:
          type: string
          enum: [transformer, cnn, rnn, custom]
        verification_config:
          $ref: '#/components/schemas/VerificationConfig'
        metadata:
          type: object
          additionalProperties: true

    VerificationConfig:
      type: object
      properties:
        zk_proof:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            proof_system:
              type: string
              enum: [groth16, plonk, stark]
              default: groth16
            circuit_type:
              type: string
              enum: [neural_network, decision_tree, custom]
            optimization_level:
              type: string
              enum: [speed, balanced, accuracy]
              default: balanced
        explainability:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            methods:
              type: array
              items:
                type: string
                enum: [shap, lime, grad_cam, attention, counterfactual]
            sample_size:
              type: integer
              minimum: 1
              maximum: 1000
              default: 100
        consensus:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            validators:
              type: integer
              minimum: 3
              maximum: 21
              default: 5
            threshold:
              type: number
              minimum: 0.5
              maximum: 1.0
              default: 0.8

    VerificationSession:
      type: object
      properties:
        verification_id:
          type: string
          pattern: '^ver_[a-zA-Z0-9]+$'
        status:
          type: string
          enum: [initialized, active, paused, completed]
        created_at:
          type: string
          format: date-time
        estimated_completion:
          type: string
          format: date-time
        endpoints:
          type: object
          properties:
            status:
              type: string
            inference:
              type: string
            results:
              type: string

    InferenceRequest:
      type: object
      required:
        - input_data
        - model_output
      properties:
        input_data:
          type: object
          additionalProperties: true
        model_output:
          type: object
          additionalProperties: true
        verification_options:
          type: object
          properties:
            fast_mode:
              type: boolean
              default: false
            include_counterfactuals:
              type: boolean
              default: false
            explanation_detail:
              type: string
              enum: [low, medium, high]
              default: medium

    InferenceSubmission:
      type: object
      properties:
        inference_id:
          type: string
        verification_id:
          type: string
        status:
          type: string
          enum: [queued, processing, completed, failed]
        stages:
          type: object
          properties:
            zk_proof:
              $ref: '#/components/schemas/StageStatus'
            explainability:
              $ref: '#/components/schemas/StageStatus'
            consensus:
              $ref: '#/components/schemas/StageStatus'
        estimated_completion:
          type: string
          format: date-time

    StageStatus:
      type: object
      properties:
        status:
          type: string
          enum: [pending, processing, completed, failed]
        progress:
          type: number
          minimum: 0
          maximum: 1

    VerificationResults:
      type: object
      properties:
        inference_id:
          type: string
        verification_id:
          type: string
        status:
          type: string
          enum: [completed, failed]
        timestamp:
          type: string
          format: date-time
        trust_score:
          type: number
          minimum: 0
          maximum: 1
        results:
          type: object
          properties:
            zk_proof:
              $ref: '#/components/schemas/ZkProofResult'
            explainability:
              $ref: '#/components/schemas/ExplainabilityResult'
            consensus:
              $ref: '#/components/schemas/ConsensusResult'

    ZkProofResult:
      type: object
      properties:
        proof:
          type: string
        proof_system:
          type: string
        verification_key:
          type: string
        public_inputs:
          type: array
          items:
            type: string
        generation_time_ms:
          type: integer
        verified:
          type: boolean

    ExplainabilityResult:
      type: object
      properties:
        method:
          type: string
        feature_importance:
          type: object
          additionalProperties:
            type: number
        explanation_text:
          type: string
        counterfactuals:
          type: array
          items:
            type: object
            properties:
              change:
                type: string
              new_output:
                type: string
              confidence_change:
                type: number
        visual_explanation_url:
          type: string
          format: uri

    ConsensusResult:
      type: object
      properties:
        agreement_score:
          type: number
          minimum: 0
          maximum: 1
        validators:
          type: integer
        votes:
          type: object
          additionalProperties:
            type: object
            properties:
              score:
                type: number
              validators:
                type: array
                items:
                  type: string
        concerns:
          type: array
          items:
            type: object
            properties:
              validator:
                type: string
              type:
                type: string
              severity:
                type: string
                enum: [low, medium, high]
              message:
                type: string

    VerificationStatus:
      type: object
      properties:
        verification_id:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        configuration:
          type: object
        statistics:
          type: object
          properties:
            total_inferences:
              type: integer
            successful_verifications:
              type: integer
            failed_verifications:
              type: integer
            average_trust_score:
              type: number
            average_processing_time_ms:
              type: integer

    BatchVerificationRequest:
      type: object
      required:
        - verification_id
        - inferences
      properties:
        verification_id:
          type: string
        inferences:
          type: array
          items:
            type: object
            properties:
              inference_id:
                type: string
              input_data:
                type: object
              model_output:
                type: object
        batch_options:
          type: object
          properties:
            parallel_processing:
              type: boolean
              default: true
            priority:
              type: string
              enum: [low, normal, high]
            callback_url:
              type: string
              format: uri

    BatchSubmission:
      type: object
      properties:
        batch_id:
          type: string
        total_inferences:
          type: integer
        status:
          type: string
        estimated_completion:
          type: string
          format: date-time

    ModelRegistration:
      type: object
      required:
        - model_name
        - model_type
      properties:
        model_name:
          type: string
        model_type:
          type: string
        architecture:
          type: object
          properties:
            layers:
              type: integer
            parameters:
              type: string
            input_shape:
              type: array
              items:
                type: integer
            output_classes:
              type: integer
        optimization_preferences:
          type: object

    Model:
      type: object
      properties:
        model_id:
          type: string
        model_name:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              additionalProperties: true
        request_id:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
