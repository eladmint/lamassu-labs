[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trustwrapper"
version = "3.0.0"
description = "Universal AI Trust Infrastructure with Zero-Knowledge Proofs"
authors = [
    {name = "Nuru AI", email = "contact@nuru.ai"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
keywords = ["ai", "verification", "blockchain", "zero-knowledge", "trust"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    "anthropic>=0.25.0",
    "openai>=1.0.0",
    "google-generativeai>=0.5.0",
    "aiohttp>=3.9.0",
    "asyncio-mqtt>=0.13.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "transformers>=4.30.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.12.0",
    "isort>=5.13.0",
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.12",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.6.0"
]
docs = [
    "markdownlint-cli>=0.38.0",
    "markdown-link-check>=3.11.0"
]
jupyter = [
    "ipython>=8.18.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0"
]
profiling = [
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0"
]

[project.urls]
Homepage = "https://github.com/eladmint/lamassu-labs"
Documentation = "https://github.com/eladmint/lamassu-labs/tree/main/docs"
Repository = "https://github.com/eladmint/lamassu-labs.git"
Issues = "https://github.com/eladmint/lamassu-labs/issues"

[project.scripts]
trustwrapper = "trustwrapper.cli:main"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "S",  # bandit
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S105",  # hardcoded password string
    "S106",  # hardcoded password string
    "S107",  # hardcoded password string
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101"]  # allow assert statements in tests

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.bandit]
exclude_dirs = ["tests", "archive"]
skips = ["B101", "B601"]