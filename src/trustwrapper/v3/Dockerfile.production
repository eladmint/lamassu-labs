# TrustWrapper v3.0 Production Dockerfile
# Multi-stage build for optimized production deployment
# Universal Multi-Chain AI Verification Platform

# =============================================================================
# Stage 1: Base Dependencies
# =============================================================================
FROM python:3.11-slim-bullseye as base

# Set environment variables for production
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libssl-dev \
    libffi-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# =============================================================================
# Stage 2: Dependencies Builder
# =============================================================================
FROM base as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    make \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .
COPY pyproject.toml .

# Install Python dependencies
RUN pip install --upgrade pip setuptools wheel && \
    pip install --user --no-warn-script-location -r requirements.txt

# =============================================================================
# Stage 3: Production Image
# =============================================================================
FROM base as production

# Create non-root user for security
RUN groupadd -r trustwrapper && useradd -r -g trustwrapper trustwrapper

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /root/.local /home/trustwrapper/.local

# Copy application code
COPY src/ src/
COPY tools/ tools/

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/config && \
    chown -R trustwrapper:trustwrapper /app

# Switch to non-root user
USER trustwrapper

# Update PATH for user-installed packages
ENV PATH=/home/trustwrapper/.local/bin:$PATH

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose application port
EXPOSE 8000

# Production command
CMD ["python", "-m", "uvicorn", "src.trustwrapper.v3.api_gateway:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "4", \
     "--worker-class", "uvicorn.workers.UvicornWorker", \
     "--access-log", \
     "--log-level", "info"]
